name: EBS Deployment & Testing 

on:
  workflow_dispatch:
    inputs:
      Build_no:
        description: Build id / build run number
        required: true

env:
  # Static / migrated ADO variable equivalents (override in repo or add to workflow_dispatch inputs)
  BASE_PATH: "/u01/buildsrv/EBSHOME"
  LIVE: Github_Demo                # <- set to your runtime folder name
  Build_no: ${{ inputs.Build_no }}
  Deployment_no : ${{ github.run_number }}
  REQUESTED_FOR: ${{ github.actor }}
  REQUESTED_FOR_EMAIL: "abcd@abcd.com"    # Not directly available in GitHub; supply via secret or input if needed
  GIT_AUTHOR_NAME: github-actions
  GIT_AUTHOR_EMAIL: actions@users.noreply.github.com
Sania@13
jobs:  
  # Stage 2: EBSSIT Environment
  deploy-EBSSIT:
    name: EBSSIT
    runs-on: LTIM-buildsrv
    environment: EBSSIT
    if: github.event.inputs.environment == 'EBSSIT' || github.ref == 'refs/heads/main'
    
    env:
      ENVIRONMENT_NAME: EBSSIT
    
    steps:        
    - name: Deploy to ${{ env.ENVIRONMENT_NAME }}
      run: |
        python3 "${{ env.BASE_PATH }}/Automation_Scripts/${{ env.LIVE }}/Transfer_Deploy.py" "$ENVIRONMENT_NAME" "${{ env.Build_no }}"
    
    - name: Display Deployment Log
      if: always()
      run: |
        cat "${{ env.BASE_PATH }}/log_files/deployment.log"
    
    - name: Display LDT Logs
      if: always()
      run: |
        cat "${{ env.BASE_PATH }}/log_files/ldt_deployment.log"
    
    - name: Catch Deployment Errors
      if: always()
      run: |
        python3 "${{ env.BASE_PATH }}/Automation_Scripts/${{ env.LIVE }}/Catch_deployment_error.py"

  test-EBSSIT:
    name: EBSSIT_Test
    runs-on: LTIM_TOSCA_97
    needs: [deploy-EBSSIT]
    environment: EBSSIT_Test

    env:
      ENVIRONMENT_NAME: EBSSIT_Test
    
    steps:
      - name: Run Tosca Test scripts
        run: |
          "C:\Program Files (x86)\TRICENTIS\Tosca Testsuite\ToscaCommander\ToscaCI\Client\ToscaCIClient.exe" -m local -c "C:\Temp\${{ env.ENVIRONMENT_NAME }}\RegressionConfingfile.xml" -t junit -r "D:\EBSHOME_TESTING\results\${{ github.run_number }}\${{ env.ENVIRONMENT_NAME }}_RegressionConfingfile.xml"
        shell: cmd

      # for first run make sure to checkout the repo to have access to run dorny test results
      # - name: Checkout repository
        # uses: actions/checkout@v4

      - name: Publish JUnit Test Results to GitHub Actions
        uses: dorny/test-reporter@v1
        with:
          name: Tosca JUnit Results
          path: D:\EBSHOME_TESTING\results\${{ github.run_number }}\${{ env.ENVIRONMENT_NAME }}_RegressionConfingfile.xml
          reporter: java-junit
          path-replace-backslashes: true


  deploy-EBSUAT:
    name: EBSUAT
    runs-on: LTIM-buildsrv
    needs: [deploy-EBSSIT]
    environment: EBSUAT
    if: github.event.inputs.environment == 'EBSUAT' || github.ref == 'refs/heads/main'
    
    env:
      ENVIRONMENT_NAME: EBSUAT
    
    steps:        
    - name: Deploy to ${{ env.ENVIRONMENT_NAME }}
      run: |
        python3 "${{ env.BASE_PATH }}/Automation_Scripts/${{ env.LIVE }}/Transfer_Deploy.py" "$ENVIRONMENT_NAME" "${{ env.Build_no }}"
    
    - name: Display Deployment Log
      if: always()
      run: |
        cat "${{ env.BASE_PATH }}/log_files/deployment.log"
    
    - name: Display LDT Logs
      if: always()
      run: |
        cat "${{ env.BASE_PATH }}/log_files/ldt_deployment.log"
    
    - name: Catch Deployment Errors
      if: always()
      run: |
        python3 "${{ env.BASE_PATH }}/Automation_Scripts/${{ env.LIVE }}/Catch_deployment_error.py"

  test-EBSUAT:
    name: EBSUAT_Test
    runs-on: LTIM_TOSCA_97
    needs: [deploy-EBSUAT]
    environment: EBSUAT_Test

    env:
      ENVIRONMENT_NAME: EBSUAT_Test
    
    steps:
      - name: Run Tosca Test scripts
        run: |
          "C:\Program Files (x86)\TRICENTIS\Tosca Testsuite\ToscaCommander\ToscaCI\Client\ToscaCIClient.exe" -m local -c "C:\Temp\${{ env.ENVIRONMENT_NAME }}\PatchUpgradeConfingfile.xml" -t junit -r "D:\EBSHOME_TESTING\results\${{ github.run_number }}\${{ env.ENVIRONMENT_NAME }}_PatchUpgradeConfingfile.xml"
        shell: cmd

      - name: Publish JUnit Test Results to GitHub Actions
        uses: dorny/test-reporter@v1
        with:
          name: Tosca JUnit Results
          path: D:\EBSHOME_TESTING\results\${{ github.run_number }}\${{ env.ENVIRONMENT_NAME }}_PatchUpgradeConfingfile.xml
          reporter: java-junit
          path-replace-backslashes: true      


  deploy-EBSPROD:
    name: EBSPROD
    runs-on: LTIM-buildsrv
    needs: [deploy-EBSUAT]
    environment: EBSPROD
    if: github.event.inputs.environment == 'EBSPROD' || github.ref == 'refs/heads/main'
    
    env:
      ENVIRONMENT_NAME: EBSPROD
    
    steps:        
    - name: Deploy to ${{ env.ENVIRONMENT_NAME }}
      run: |
        python3 "${{ env.BASE_PATH }}/Automation_Scripts/${{ env.LIVE }}/Transfer_Deploy.py" "$ENVIRONMENT_NAME" "${{ env.Build_no }}"
    
    - name: Display Deployment Log
      if: always()
      run: |
        cat "${{ env.BASE_PATH }}/log_files/deployment.log"
    
    - name: Display LDT Logs
      if: always()
      run: |
        cat "${{ env.BASE_PATH }}/log_files/ldt_deployment.log"
    
    - name: Catch Deployment Errors
      if: always()
      run: |
        python3 "${{ env.BASE_PATH }}/Automation_Scripts/${{ env.LIVE }}/Catch_deployment_error.py"

  test-EBSPROD:
    name: EBSPROD_Test
    runs-on: LTIM_TOSCA_97
    needs: [deploy-EBSPROD]
    environment: EBSPROD_Test

    env:
      ENVIRONMENT_NAME: EBSPROD_Test
    
    steps:
      - name: Run Tosca Test scripts
        run: |
          "C:\Program Files (x86)\TRICENTIS\Tosca Testsuite\ToscaCommander\ToscaCI\Client\ToscaCIClient.exe" -m local -c "C:\Temp\${{ env.ENVIRONMENT_NAME }}\smokeConfingfile.xml" -t junit -r "D:\EBSHOME_TESTING\results\${{ github.run_number }}\${{ env.ENVIRONMENT_NAME }}_smoke_result.xml"
        shell: cmd


      - name: Publish JUnit Test Results to GitHub Actions
        uses: dorny/test-reporter@v1
        with:
          name: Tosca JUnit Results
          path: D:\EBSHOME_TESTING\results\${{ github.run_number }}\${{ env.ENVIRONMENT_NAME }}_smoke_result.xml
          reporter: java-junit
          path-replace-backslashes: true 
